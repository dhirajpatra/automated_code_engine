# version: '3.8'

services:
  pgsql:
    container_name: pgsql
    image: postgres:15-alpine
    volumes:
      - postgres-data-volume:/var/lib/postgresql/data/
      - ./app/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password123
      - POSTGRES_DB=lcnc_db_dev
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5

  # adminer:
  #   image: adminer
  #   container_name: pgsql-adminer
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - pgsql
  #   networks:
  #     - app-network

  app:
    build:
      context: ./app  # Change context to the app folder
      dockerfile: Dockerfile  # Dockerfile name remains the same
    container_name: app
    env_file:
      - ./.env.dev
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./app:/app
      - ./app/generated_files:/app/generated_files  # Mount for generated backend files 
      - ./app/dart_files:/app/dart_files
    ports:
      - "8001:8001"
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 4G

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 2G
    restart: always

  redis_insight:
    image: redis/redisinsight:latest
    container_name: redis_insight
    ports:
      - "5540:5540"
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy

  celery_worker:
    build:
      context: ./app
      dockerfile: Dockerfile.celery-worker
    container_name: celery_worker
    environment:
      - PYTHONPATH=/app
      - BROKER_URL=redis://redis:6379/0
      - RESULT_BACKEND=redis://redis:6379/0
      - PREFETCH_MULTIPLIER=1
      - MAX_MEMORY_PER_CHILD=512
    depends_on:
      - app
      - redis
      - pgsql
    volumes:
      - ./app:/app
      - ./app/generated_files:/app/generated_files
      - ./app/dart_files:/app/dart_files
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data-volume:  # Named volume for PostgreSQL data

networks:
  app-network:
    driver: bridge
